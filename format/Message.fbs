namespace org.apache.arrow.format.dataheaders;

table Tuple {
}

table List {
}

enum UnionMode:int { Sparse, Dense }

table Union {
  mode: UnionMode;
}

union Type {
  Int,
  Bit,
  FloatingPoint,
  Binary,
  Utf8,
  Bool,
  Decimal,
  Timestamp,
  List,
  Tuple,
  Union
}

table Field {
  // Name is not required, in i.e. a List
  name: string;
  nullable: bool;
  type: Type;
  children: [Field];
}

table Bit {
}

table Int {
  bitWidth: int; // 1 to 64
  signed: bool;
}

enum Precision:int {SINGLE, DOUBLE}

table FloatingPoint {
  precision: Precision;
}

table Utf8 {
}

table Binary {
}

table Bool {
}

table Decimal {
  precision: int;
  scale: int;
}

table Timestamp {
  timezone: string;
}

table JSONScalar {
  dense:bool=true;
}

table Schema {
  fields: [Field];
}

struct Buffer {
 page: int;
 offset: long;
 length: long;
}

struct FieldNode {
  length: int; // number of values
  null_count: int;
}

union MessageHeader {
  Schema, DictionaryBatch, RecordBatch
}

table Message {
  header: MessageHeader;
  bodyLength: long;
}

table RecordBatch {
  /// number of records
  length: int;

  /// Nodes correspond to the pre-ordered flattened logical schema
  nodes: [FieldNode];

  /// Buffers correspond to the pre-ordered flattened buffer tree
  buffers: [Buffer];
}

table DictionaryBatch {
  id: long;
  data: RecordBatch;
}

root_type Message;
